name: release

on:
  release:
    types: [released]
    
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: distributedCache-db
        ports:
            - 13306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3        
    steps:
      - uses: actions/checkout@v4
      - name: Fetch all history for all tags and branches
        run: if $(git rev-parse --is-shallow-repository); then git fetch --prune --unshallow ; fi
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install dependencies
        run: dotnet restore --no-cache --locked-mode --use-lock-file
      - name: Install tools
        run: dotnet tool restore 
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Bootstrap MySQL
        run: |
          mysql -h 127.0.0.1 -P 13306 -uroot distributedCache-db < test/docker/init.sql
      - name: Test
        run: dotnet test --no-restore --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute="Obsolete%2cGeneratedCodeAttribute%2cCompilerGeneratedAttribute"
      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Process version of the tag
        id: version
        uses: ncipollo/semantic-version-action@v1
      - name: Pack Release
        if: "!github.event.release.prerelease"
        run: dotnet pack src/ScaledDomains.Extensions.Caching.MySql/ScaledDomains.Extensions.Caching.MySql.csproj -p:PackageVersion=${{ format('{0}.{1}.{2}', steps.version.outputs.major, steps.version.outputs.minor, steps.version.outputs.patch) }} --output nuget-packages --configuration Release --no-build --no-restore
      - name: Pack Prerelease
        if: "github.event.release.prerelease"
        run: dotnet pack src/ScaledDomains.Extensions.Caching.MySql/ScaledDomains.Extensions.Caching.MySql.csproj -p:PackageVersion=${{ format('{0}.{1}.{2}-beta{3}', steps.version.outputs.major, steps.version.outputs.minor, steps.version.outputs.patch, github.run_number) }} --output nuget-packages --configuration Release --no-build --no-restore
      - name: Push
        run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json
