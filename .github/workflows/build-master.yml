name: build-master
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: distributedCache-db
        ports:
            - 13306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3        
    steps:
    - uses: actions/checkout@v4
    - name: Fetch all history for all tags and branches
      run: if $(git rev-parse --is-shallow-repository); then git fetch --prune --unshallow ; fi
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Install dependencies
      run: dotnet restore --no-cache --locked-mode --use-lock-file
    - name: Install tools
      run: dotnet tool restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Bootstrap MySQL
      run: |
        mysql -h 127.0.0.1 -P 13306 -uroot distributedCache-db < test/docker/init.sql
    - name: Test
      run: dotnet test --no-restore --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute="Obsolete%2cGeneratedCodeAttribute%2cCompilerGeneratedAttribute" --logger "trx;LogFileName=testresult.xml"
    - name: Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}    
    - name: Install sonar
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"scaleddomains_ScaledDomains.Extensions.Caching.MySql" /o:"scaleddomains" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/test/**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/test/**/testresult.xml" /d:sonar.coverage.exclusions="**/test/**/*.cs"
        dotnet build --configuration Release --no-restore
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
